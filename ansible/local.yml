---
- hosts: localhost
  connection: local

  tasks:
  - name: "install base"
    become: yes
    package:
      name:
      - bash
      - zsh
      - curl
      - unzip
      - wget
      - git
      - ripgrep
      - fzf
      - neovim

  # oh-my-zsh
  - name: "install oh-my-zsh"
    git:
      repo: "https://github.com/robbyrussell/oh-my-zsh"
      dest: "{{ ansible_user_dir }}/.oh-my-zsh"
      version: master
      update: yes

  - name: "update .zshrc"
    lineinfile:
      name: "{{ ansible_user_dir }}/.zshrc"
      line: '{{ item }}'
      state: present
    with_items:
      - 'export EDITOR=nvim'
      - 'export ZSH="$HOME/.oh-my-zsh"'
      - 'ZSH_THEME=robbyrussell'
      - 'source $ZSH/oh-my-zsh.sh'
      - 'source /usr/share/fzf/shell/key-bindings.zsh'

  - name: "zsh set default shell"
    become: yes
    user:
      name: "{{ ansible_user_id }}"
      shell: /bin/zsh

  # go
  - name: "install go"
    become: yes
    package:
      name: golang

  - name: "go setup zsh"
    lineinfile:
      name: "{{ ansible_user_dir }}/.zshrc"
      line: 'export PATH="$HOME/go/bin:$PATH"'
      state: present

  # python
  - name: "install python3"
    become: yes
    package:
      name:
      - python3
      - python3-pip

  - name: "python setup zsh"
    lineinfile:
      name: "{{ ansible_user_dir }}/.zshrc"
      line: 'export PATH="$HOME/.local/bin:$PATH"'
      state: present

  # terraform
  - name: "terraform fedora dnf add hashicorp repo"
    become: yes
    yum_repository:
      name: hashicorp-stable
      description: Hashicorp Stable - $basearch
      baseurl: https://rpm.releases.hashicorp.com/fedora/$releasever/$basearch/stable
      gpgcheck: yes
      gpgkey: https://rpm.releases.hashicorp.com/gpg
    when: ansible_distribution == 'Fedora'

  - name: "install terraform"
    become: yes
    package:
      name: terraform

  # fnm
  - name: "fnm check installed"
    register: fnm
    check_mode: no
    stat:
      path: "{{ ansible_user_dir }}/.fnm/fnm"

  - name: "fnm download"
    when: not fnm.stat.exists
    get_url:
      url: https://fnm.vercel.app/install
      dest: /tmp/fnm-installer.sh

  - name: "fnm install"
    command:
      cmd: bash /tmp/fnm-installer.sh --skip-shell
      creates: "{{ ansible_user_dir }}/.fnm/fnm"

  - name: "fnm setup zsh"
    lineinfile:
      name: "{{ ansible_user_dir }}/.zshrc"
      line: '{{ item }}'
      state: present
    with_items:
      - 'export PATH="$HOME/.fnm:$PATH"'
      - 'eval "$(fnm env --use-on-cd)"'

  - name: "fnm install lts"
    command: "fnm install --lts"
    when: true

  # LSP
  - name: "npm install ansible-language-server"
    community.general.npm:
      global: yes
      name: "@ansible/ansible-language-server"

  - name: "npm install yaml-language-server"
    community.general.npm:
      global: yes
      name: yaml-language-server

  - name: "install terraform-ls"
    become: yes
    package:
      name: terraform-ls

  - name: "install gopls"
    command: 
      cmd: "go install golang.org/x/tools/gopls@latest"
      creates: "{{ ansible_user_dir }}/go/bin/gopls"

  - name: "install efm-langserver"
    command: 
      cmd: "go install github.com/mattn/efm-langserver@latest"
      creates: "{{ ansible_user_dir }}/go/bin/efm-langserver"

  - name: "install pyright"
    community.general.npm:
      global: yes
      name: pyright

  - name: "install eslint_d"
    community.general.npm:
      global: yes
      name: eslint_d

  - name: "install prettier"
    community.general.npm:
      global: yes
      name: prettier

  - name: "install typescript"
    community.general.npm:
      global: yes
      name: typescript

  - name: "clone lua-language-server"
    become: yes
    git:
      repo: "https://github.com/sumneko/lua-language-server"
      dest: "/usr/local/src/lua-language-server"
      depth: 1
      version: master
      recursive: yes
      update: yes

  - name: "install lua-language-server dependencies fedora"
    become: yes
    package:
      name:
        - ninja-build
        - gcc-c++
        - libstdc++-static
        - libstdc++-devel
    when: ansible_distribution == 'Fedora'

  - name: "build lua-language-server"
    become: yes
    command:
      chdir: "/usr/local/src/lua-language-server/3rd/luamake"
      cmd: "./compile/install.sh"
      creates: "/usr/local/src/lua-language-server/3rd/luamake/build"

  - name: "luamake rebuild lua-language-server"
    become: yes
    command:
      chdir: "/usr/local/src/lua-language-server"
      cmd: "./3rd/luamake/luamake rebuild"
      creates: "/usr/local/src/lua-language-server/bin"
